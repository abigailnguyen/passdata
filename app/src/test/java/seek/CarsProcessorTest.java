/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package seek;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.junit.Assert.assertTrue;

import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Map.Entry;

import com.google.common.collect.Maps;

import org.junit.Test;

public class CarsProcessorTest {

    private CarsProcessor carsProcessor = new CarsProcessor();

    @Test
    public void Test_GetTotalNumberOfCars() {
        Map<String, Integer> input = new HashMap<>();
        input.put("2021-01-05T01:00:00", 10);
        input.put("2021-01-05T01:30:00", 20);
        input.put("2021-01-05T02:30:00", 30);
        var expected = 60;
        var actual = carsProcessor.getTotalCars(input);
        assertThat(String.format("Should expect %d but got %d", expected, actual), actual == expected);
    }

    @Test
    public void Test_Get3LeastNumberOfCarsHalfHours() {
        Map<String, Integer> input = new HashMap<>();
        input.put("2021-01-05T01:00:00", 10);
        input.put("2021-01-05T01:30:00", 20);
        input.put("2021-01-05T02:00:00", 1);
        input.put("2021-01-05T02:30:00", 5);
        input.put("2021-01-05T03:00:00", 40);
        input.put("2021-01-05T05:00:00", 11);
        var actual = carsProcessor.threeHalfHourLeastCars(input);
        var expectedSet = new HashSet<Entry<String, Integer>>();
        expectedSet.add(Maps.immutableEntry("2021-01-05T02:00:00", 1));
        expectedSet.add(Maps.immutableEntry("2021-01-05T02:30:00", 5));
        expectedSet.add(Maps.immutableEntry("2021-01-05T01:00:00", 10));
        assertTrue("Does not contain correct number of entries", expectedSet.containsAll(actual.entrySet()));
    }

    @Test
    public void Test_GetLeastNumberOfCarsEvery1AndHalfHours() {
        Map<String, Integer> input = new LinkedHashMap<>();
        input.put("2021-01-05T01:00:00", 10);
        input.put("2021-01-05T01:30:00", 20);
        input.put("2021-01-05T02:00:00", 1);
        input.put("2021-01-05T02:30:00", 5);
        input.put("2021-01-05T03:00:00", 40);
        input.put("2021-01-05T05:00:00", 11);
        var actual = carsProcessor.bestOneandHalfHourCars(input);
        for (var entry : actual.entrySet()) {
            System.out.println(entry.getKey() + " " + entry.getValue());
        }
        var expectedSet = new HashSet<Entry<String, Integer>>();
        expectedSet.add(Maps.immutableEntry("2021-01-05T01:30:00", 20));
        expectedSet.add(Maps.immutableEntry("2021-01-05T02:00:00", 1));
        expectedSet.add(Maps.immutableEntry("2021-01-05T02:30:00", 5));
        assertTrue("Does not contain correct number of entries", expectedSet.containsAll(actual.entrySet()));
    }

    @Test
    public void Test_GetNumberOfCarsEveryDay() {
        Map<String, Integer> input = new HashMap<>();
        input.put("2021-01-05T01:00:00", 10);
        input.put("2021-01-05T01:30:00", 20);
        input.put("2021-01-05T02:00:00", 1);
        input.put("2021-01-06T02:30:00", 5);
        input.put("2021-01-06T03:00:00", 40);
        input.put("2021-01-06T05:00:00", 11);
        var actual = carsProcessor.getTotalCarsByDate(input);
        for (var entry : actual.entrySet()) {
            System.out.println(entry.getKey() + " " + entry.getValue());
        }
        var expectedSet = new HashSet<Entry<String, Integer>>();
        expectedSet.add(Maps.immutableEntry("2021-01-05", 31));
        expectedSet.add(Maps.immutableEntry("2021-01-06", 56));
        assertTrue("Does not contain correct number of entries", expectedSet.containsAll(actual.entrySet()));
    }
}
